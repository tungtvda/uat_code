<?phpCore::requireModel('product');class ProductTypeModel extends BaseModel{	private $output = array();    private $module_name = "Product Type";	private $module_dir = "modules/producttype/";    private $module_default_url = "/main/producttype/index";    private $module_default_admin_url = "/admin/producttype/index";		public function __construct() 	{		parent::__construct();	}		public function Index($param) 	{		$crud = new CRUD();		// Prepare Pagination		$query_count = "SELECT COUNT(*) AS num FROM product_type WHERE Enabled = 1";		$total_pages = $this->dbconnect->query($query_count)->fetchColumn(); 				$targetpage = $data['config']['SITE_DIR'].'/main/producttype/index';		$limit = 5;		$stages = 3;		$page = mysql_escape_string($_GET['page']);		if ($page) {			$start = ($page - 1) * $limit; 		} else {			$start = 0;			}					// Initialize Pagination		$paginate = $crud->paginate($targetpage,$total_pages,$limit,$stages,$page);				$sql = "SELECT * FROM product_type WHERE Enabled = 1 ORDER BY ID ASC LIMIT $start, $limit";				$result = array();		$i = 0;		foreach ($this->dbconnect->query($sql) as $row)		{			$result[$i] = array(			'ID' => $row['ID'],			'Label' => $row['Label']);						$i += 1;		}		$this->output = array( 		'config' => $this->config,		'page' => array('title' => "Product Types", 'template' => 'common.tpl.php', 'custom_inc' => 'on', 'custom_inc_loc' => $this->module_dir.'inc/main/index.inc.php'),		'breadcrumb' => HTML::getBreadcrumb($this->module_name,$this->module_default_url,"",$this->config,""),		'content' => $result,		'content_param' => array('count' => $i, 'total_results' => $total_pages, 'paginate' => $paginate),		'meta' => array('active' => "on"));							return $this->output;	}	public function View($param) 	{		$sql = "SELECT * FROM product_type WHERE ID = '".$param."' AND Enabled = 1";				$result = array();		$i = 0;		foreach ($this->dbconnect->query($sql) as $row)		{			$result[$i] = array(			'ID' => $row['ID'],			'Label' => $row['Label']);						$i += 1;		}		$this->output = array( 		'config' => $this->config,		'page' => array('title' => $result[0]['Title'], 'template' => 'common.tpl.php'),		'breadcrumb' => HTML::getBreadcrumb($this->module_name,$this->module_default_url,"",$this->config,$result[0]['Title']),		'content' => $result,		'content_param' => array('count' => $i),		'meta' => array('active' => "on"));							return $this->output;	}	public function AdminIndex($param) 	{				// Initialise query conditions		$query_condition = "";				$crud = new CRUD();				if ($_POST['Trigger']=='search_form')		{			// Reset Query Variable			$_SESSION['producttype_'.__FUNCTION__] = "";						$query_condition .= $crud->queryCondition("ID",$_POST['ID'],"=");			$query_condition .= $crud->queryCondition("Label",$_POST['Label'],"LIKE");						$_SESSION['producttype_'.__FUNCTION__]['param']['ID'] = $_POST['ID'];			$_SESSION['producttype_'.__FUNCTION__]['param']['Label'] = $_POST['Label'];						// Set Query Variable			$_SESSION['producttype_'.__FUNCTION__]['query_condition'] = $query_condition;			$_SESSION['producttype_'.__FUNCTION__]['query_title'] = "Search Results";		}		// Reset query conditions		if ($_GET['page']=="all")		{			$_GET['page'] = "";			unset($_SESSION['producttype_'.__FUNCTION__]);					}		// Determine Title		if (isset($_SESSION['producttype_'.__FUNCTION__]))		{			$query_title = "Search Results";            $search = "on";		}		else		{			$query_title = "All Results";            $search = "off";		}		// Prepare Pagination		$query_count = "SELECT COUNT(*) AS num FROM product_type ".$_SESSION['producttype_'.__FUNCTION__]['query_condition'];		$total_pages = $this->dbconnect->query($query_count)->fetchColumn(); 				$targetpage = $data['config']['SITE_DIR'].'/admin/producttype/index';		$limit = 10;		$stages = 3;		$page = mysql_escape_string($_GET['page']);		if ($page) {			$start = ($page - 1) * $limit; 		} else {			$start = 0;			}					// Initialize Pagination		$paginate = $crud->paginate($targetpage,$total_pages,$limit,$stages,$page);				$sql = "SELECT * FROM product_type ".$_SESSION['producttype_'.__FUNCTION__]['query_condition']." ORDER BY ID ASC LIMIT $start, $limit";				$result = array();		$i = 0;		foreach ($this->dbconnect->query($sql) as $row)		{			$result[$i] = array(			'ID' => $row['ID'],			'Label' => $row['Label']);						$i += 1;		}				$this->output = array( 		'config' => $this->config,		'page' => array('title' => "Product Types", 'template' => 'admin.common.tpl.php', 'custom_inc' => 'on', 'custom_inc_loc' => $this->module_dir.'inc/admin/index.inc.php', 'producttype_delete' => $_SESSION['admin']['producttype_delete']),		'block' => array('side_nav' => $this->module_dir.'inc/admin/side_nav.producttype_common.inc.php'),		'breadcrumb' => HTML::getBreadcrumb($this->module_name,$this->module_default_admin_url,"admin",$this->config,""),		'content' => $result,		'content_param' => array('count' => $i, 'total_results' => $total_pages, 'paginate' => $paginate, 'query_title' => $query_title, 'search' => $search, 'enabled_list' => CRUD::getActiveList()),		'secure' => TRUE,		'meta' => array('active' => "on"));		unset($_SESSION['admin']['producttype_delete']);							return $this->output;	}	public function AdminAdd() 	{		$this->output = array( 		'config' => $this->config,		'page' => array('title' => "Create Product Type", 'template' => 'admin.common.tpl.php', 'custom_inc' => 'on', 'custom_inc_loc' => $this->module_dir.'inc/admin/add.inc.php', 'producttype_add' => $_SESSION['admin']['producttype_add']),		'block' => array('side_nav' => $this->module_dir.'inc/admin/side_nav.producttype_common.inc.php'),		'breadcrumb' => HTML::getBreadcrumb($this->module_name,$this->module_default_admin_url,"admin",$this->config,"Create product Type"),		'content_param' => array('enabled_list' => CRUD::getActiveList()),		'secure' => TRUE,		'meta' => array('active' => "on"));						unset($_SESSION['admin']['producttype_add']);							return $this->output;	}	public function AdminAddProcess()	{		$key = "(Label)";		$value = "('".$_POST['Label']."')";		$sql = "INSERT INTO product_type ".$key." VALUES ". $value;		$count = $this->dbconnect->exec($sql);		$newID = $this->dbconnect->lastInsertId();				// Set Status        $ok = ($count==1) ? 1 : "";						$this->output = array( 		'config' => $this->config,		'page' => array('title' => "Creating Product Type...", 'template' => 'admin.common.tpl.php'),		'content_param' => array('count' => $count, 'newID' => $newID),		'status' => array('ok' => $ok, 'error' => $error),		'meta' => array('active' => "on"));							return $this->output;	}	public function AdminEdit($param) 	{		$sql = "SELECT * FROM product_type WHERE ID = '".$param."'";			$result = array();		$i = 0;		foreach ($this->dbconnect->query($sql) as $row)		{			$result[$i] = array(			'ID' => $row['ID'],			'Label' => $row['Label']);						$i += 1;		}		$this->output = array( 		'config' => $this->config,		'page' => array('title' => "Edit Product Type", 'template' => 'admin.common.tpl.php', 'custom_inc' => 'on', 'custom_inc_loc' => $this->module_dir.'inc/admin/edit.inc.php', 'producttype_add' => $_SESSION['admin']['producttype_add'], 'producttype_edit' => $_SESSION['admin']['producttype_edit']),		'block' => array('side_nav' => $this->module_dir.'inc/admin/side_nav.producttype_common.inc.php'),		'breadcrumb' => HTML::getBreadcrumb($this->module_name,$this->module_default_admin_url,"admin",$this->config,"Edit product Type"),		'content' => $result,		'content_param' => array('count' => $i, 'enabled_list' => CRUD::getActiveList()),		'secure' => TRUE,		'meta' => array('active' => "on"));		unset($_SESSION['admin']['producttype_add']);		unset($_SESSION['admin']['producttype_edit']);							return $this->output;	}	public function AdminEditProcess($param, $controller) 	{                        switch ($_POST['Lang']) {                case "zhCN":                    $LanguageID = LanguageModel::getLanguageID("zh_CN");                    break;                case "en":                    $LanguageID = LanguageModel::getLanguageID("en");                    break;                case "ms":                    $LanguageID = LanguageModel::getLanguageID("ms");                    break;                                case "zh_CN":                    $LanguageID = LanguageModel::getLanguageID("zh_CN");                    break;                            }            if($_POST['Lang'] != 'en')            {                            $ModuleID = ModuleModel::getModuleID($controller);                                    $con1 = array();            $con1 = array('Label' => base64_encode($_POST['Label']));                            $con1 = json_encode($con1);                                     $sql2 = "UPDATE module_translation SET Content='".$con1."' WHERE RowID = '".$param."' AND LanguageID = '".$LanguageID."' AND ModuleID = '".$ModuleID."'";                      		$count = $this->dbconnect->exec($sql2);				// Set Status                $ok = ($count<=1) ? 1 : "";                            }            elseif($_POST['Lang'] == 'en')            {    		$sql = "UPDATE product_type SET Label='".$_POST['Label']."' WHERE ID='".$param."'";		$count = $this->dbconnect->exec($sql);				// Set Status        $ok = ($count<=1) ? 1 : "";                                            }				$this->output = array( 		'config' => $this->config,		'page' => array('title' => "Editing Product Type...", 'template' => 'admin.common.tpl.php'),		'content_param' => array('count' => $count),		'status' => array('ok' => $ok, 'error' => $error),		'meta' => array('active' => "on"));							return $this->output;	}		public function AdminDelete($param) 	{		$sql = "DELETE FROM product_type WHERE ID ='".$param."'";		$count = $this->dbconnect->exec($sql);				// Set Status        $ok = ($count==1) ? 1 : "";				$this->output = array( 		'config' => $this->config,		'page' => array('title' => "Deleting Product Type...", 'template' => 'admin.common.tpl.php'),		'content_param' => array('count' => $count),		'status' => array('ok' => $ok, 'error' => $error),		'meta' => array('active' => "on"));							return $this->output;	}	public function getProductType($param) 	{		$crud = new CRUD();		$sql = "SELECT * FROM product_type WHERE ID = '".$param."'";				$result = array();		$i = 0;		foreach ($this->dbconnect->query($sql) as $row)		{			$result[$i] = array(			'ID' => $row['ID'],			'Label' => $row['Label']);						$i += 1;		}				$result = $result[0]['Label'];				return $result;	}		public function getProductTypeColumns($param) 	{		$crud = new CRUD();		$sql = "SELECT * FROM product_type WHERE ID = '".$param."'";				$result = array();		$i = 0;		foreach ($this->dbconnect->query($sql) as $row)		{			$result[$i] = array(			'ID' => $row['ID'],			'Label' => $row['Label']);						$i += 1;		}				//$result = $result[0]['Label'];				return $result;	}                public function getProductTypeID() 	{		$crud = new CRUD();		$sql = "SELECT ID FROM product_type";				$result = array();		$i = 0;		foreach ($this->dbconnect->query($sql) as $row)		{			$result[$i]['ID'] = $row['ID'];						$i += 1;		}				$result['count'] = $i;				return $result;	}		public function getProductTypeList() 	{		$crud = new CRUD();		$sql = "SELECT * FROM product_type ORDER BY ID DESC";				$result = array();		$i = 0;		foreach ($this->dbconnect->query($sql) as $row)		{			$result[$i] = array(			'ID' => $row['ID'],			'Label' => $row['Label'],						'Product' =>ProductModel::getProductByType($row['ID']));						$i += 1;		}				$result['count'] = $i;				return $result;	}                public function getProductTypeListLabel() 	{		$crud = new CRUD();		$sql = "SELECT * FROM product_type ORDER BY ID DESC";				$result = array();		foreach ($this->dbconnect->query($sql) as $row)		{			$dataSet = $row['Label'];			                        array_push($result, $dataSet);		}						return $result;	}                        public function getAPIProductTypeList() 	{		$crud = new CRUD();		$sql = "SELECT * FROM product_type ORDER BY ID DESC";			$result = array();		foreach ($this->dbconnect->query($sql) as $row)		{			$dataSet = array(			'ID' => $row['ID'],			'Label' => $row['Label'],					'Product' =>ProductModel::getProductByType($row['ID']));						 array_push($result, $dataSet);		}								return $result;	}               	public function AdminExport($param) 	{				$sql = "SELECT * FROM product_type ".$_SESSION['producttype_'.$param]['query_condition']." ORDER BY ID ASC";				$result = array();				$result['filename'] = $this->config['SITE_Label']."_Product_Type";		$result['header'] = $this->config['SITE_Label']." | Product Type (" . date('Y-m-d H:i:s') . ")\n\nID, Label";		$result['content'] = '';				$i = 0;		foreach ($this->dbconnect->query($sql) as $row)		{			$result['content'] .= "\"".$row['ID']."\",";			$result['content'] .= "\"".$row['Label']."\"\n";			$i += 1;		}				$this->output = array( 		'config' => $this->config,		'page' => array('title' => "Exporting..."),		'content' => $result,		'secure' => TRUE,		'meta' => array('active' => "on"));							return $this->output;	}}?>